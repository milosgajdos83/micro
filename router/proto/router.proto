syntax = "proto3";

package go.micro.router;

import "table/proto/table.proto";

// Router service is used by the proxy to lookup routes
service Router {
	rpc Lookup(go.micro.table.LookupRequest) returns (go.micro.table.LookupResponse) {};
        rpc Solicit(Request) returns (Response) {};
        rpc Advertise(Request) returns (stream Advert) {};
        rpc Process(Advert) returns (ProcessResponse) {};
	rpc Status(Request) returns (StatusResponse) {};
        rpc Watch(go.micro.table.WatchRequest) returns (stream go.micro.table.Event) {};
}

// Empty request
message Request {}

// Empty response
message Response {}

// AdvertType defines the type of advert
enum AdvertType {
        AdvertAnnounce = 0;
        AdvertUpdate = 1;
}

// Advert is router advertsement streamed by Watch
message Advert {
        // id of the advertising router
        string id = 1;
        // type of advertisement
        AdvertType type = 2;
        // unix timestamp of the advertisement
        int64 timestamp = 3;
        // TTL of the Advert
        int64 ttl = 4;
        // events is a list of advertised events
        repeated go.micro.table.Event events = 5;
}

// Solicit solicits routes
message Solicit {
        // id of the soliciting router
        string id = 1;
}

// ProcessResponse is returned by Process
message ProcessResponse {}

message Status {
	string code = 1;
	string error = 2;
}

message StatusResponse {
	Status status = 1;
}
